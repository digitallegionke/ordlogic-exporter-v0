"use client";

import { useEffect, useState, Suspense } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import { DashboardLayout } from "@/components/layout/dashboard-layout";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import toast, { Toaster } from "react-hot-toast";
import { supabase } from "@/lib/supabaseClient";
import { PDFDownloadLink, Document, Page, Text, View, StyleSheet } from "@react-pdf/renderer";

const styles = StyleSheet.create({
  page: { padding: 30, fontSize: 12 },
  section: { marginBottom: 10 },
  title: { fontSize: 18, fontWeight: 700, marginBottom: 10 },
  label: { fontWeight: 700 },
});

function ContractPDF({ request, farmer, client }: any) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.section}>
          <Text style={styles.title}>Contract Farming Agreement</Text>
        </View>
        <View style={styles.section}>
          <Text><Text style={styles.label}>Client:</Text> {client?.contact_person} ({client?.company_name})</Text>
          <Text><Text style={styles.label}>Farmer:</Text> {farmer?.name}</Text>
        </View>
        <View style={styles.section}>
          <Text><Text style={styles.label}>Produce:</Text> {request?.produce_type}</Text>
          <Text><Text style={styles.label}>Quantity:</Text> {request?.quantity} kg</Text>
          <Text><Text style={styles.label}>Organic Required:</Text> {request?.organic_required ? "Yes" : "No"}</Text>
          <Text><Text style={styles.label}>Preferred Location:</Text> {request?.preferred_location}</Text>
          <Text><Text style={styles.label}>Drop-off Location:</Text> {request?.dropoff_location}</Text>
          <Text><Text style={styles.label}>Handling Instructions:</Text> {request?.handling_instructions}</Text>
        </View>
        <View style={styles.section}>
          <Text>This contract is generated by OrdLogic and is valid upon signature by both parties.</Text>
        </View>
      </Page>
    </Document>
  );
}

export default function ContractGeneratorPage() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const requestId = searchParams.get("requestId");
  const farmerId = searchParams.get("farmerId");
  const [loading, setLoading] = useState(true);
  const [request, setRequest] = useState<any>(null);
  const [farmer, setFarmer] = useState<any>(null);
  const [client, setClient] = useState<any>(null);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      // Fetch request
      const { data: req } = await supabase.from("sourcing_requests").select("*", { count: "exact" }).eq("id", requestId).single();
      setRequest(req);
      // Fetch farmer
      const { data: f } = await supabase.from("farmers").select("*").eq("id", farmerId).single();
      setFarmer(f);
      // Fetch client (exporter)
      if (req?.client_id) {
        const { data: exporter } = await supabase.from("exporters").select("contact_person, company_name, email").eq("auth_user_id", req.client_id).single();
        setClient(exporter);
      }
      setLoading(false);
    };
    if (requestId && farmerId) fetchData();
    // eslint-disable-next-line
  }, [requestId, farmerId]);

  const handleSendWhatsApp = () => {
    toast.success("WhatsApp send (mocked)");
  };
  const handleSendEmail = () => {
    toast.success("Email send (mocked)");
  };

  return (
    <DashboardLayout>
      <Toaster position="top-right" />
      <div className="max-w-2xl mx-auto mt-8">
        <Card>
          <CardHeader>
            <CardTitle>Contract Preview</CardTitle>
          </CardHeader>
          <CardContent>
            {loading ? (
              <div className="text-gray-500">Loading...</div>
            ) : (
              <>
                <div className="bg-gray-50 p-4 rounded mb-4">
                  <div className="font-bold text-lg mb-2">Contract Farming Agreement</div>
                  <div><b>Client:</b> {client?.contact_person} ({client?.company_name})</div>
                  <div><b>Farmer:</b> {farmer?.name}</div>
                  <div><b>Produce:</b> {request?.produce_type}</div>
                  <div><b>Quantity:</b> {request?.quantity} kg</div>
                  <div><b>Organic Required:</b> {request?.organic_required ? "Yes" : "No"}</div>
                  <div><b>Preferred Location:</b> {request?.preferred_location}</div>
                  <div><b>Drop-off Location:</b> {request?.dropoff_location}</div>
                  <div><b>Handling Instructions:</b> {request?.handling_instructions}</div>
                  <div className="mt-2 text-xs text-muted-foreground">This contract is generated by OrdLogic and is valid upon signature by both parties.</div>
                </div>
                <div className="flex flex-col md:flex-row gap-2">
                  <PDFDownloadLink
                    document={<ContractPDF request={request} farmer={farmer} client={client} />}
                    fileName={`contract-${requestId}-${farmerId}.pdf`}
                  >
                    {({ loading }) => (
                      <Button variant="outline" disabled={loading}>{loading ? "Preparing PDF..." : "Download PDF"}</Button>
                    )}
                  </PDFDownloadLink>
                  <Button onClick={handleSendWhatsApp} variant="outline">Send via WhatsApp</Button>
                  <Button onClick={handleSendEmail} variant="outline">Send via Email</Button>
                </div>
              </>
            )}
          </CardContent>
        </Card>
      </div>
    </DashboardLayout>
  );
} 